name: Compile tinymesa
description: Compiles a specific mesa version and extracts tinymesa.
inputs:
  mesa-tag:
    description: "mesa tag to compile"
    required: true
runs:
  using: "composite"
  steps:
    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.12'
    - name: Install Python packages
      shell: bash
      run: |
        python -m venv .venv
        . .venv/bin/activate
        echo "${{ github.workspace }}/.venv/bin" >> "$GITHUB_PATH"
        python -m pip install meson mako pyyaml packaging

    - name: Cache cargo
      uses: actions/cache@v4
      with:
        path: ~/.cargo/bin/
        key: cargo-${{ runner.os }}
    - name: Install rust packages
      shell: bash
      run: cargo install bindgen-cli cbindgen
    - name: Setup APT
      shell: bash
      run: |
        sudo chown -R $USER:$USER /var/cache/apt/archives
        echo 'Acquire::GzipIndexes "true";' | sudo tee /etc/apt/apt.conf.d/gzip
        echo 'Acquire::http::Pipeline-Depth "5";' | sudo tee -a /etc/apt/apt.conf.d/99parallel
        echo 'Binary::apt::APT::Keep-Downloaded-Packages "true";' | sudo tee -a /etc/apt/apt.conf.d/99keep-debs
        wget -qO- https://apt.llvm.org/llvm-snapshot.gpg.key | sudo tee /etc/apt/trusted.gpg.d/apt.llvm.org.asc
        echo "deb http://apt.llvm.org/$(lsb_release -cs)/ llvm-toolchain-$(lsb_release -cs)-20 main" | sudo tee /etc/apt/sources.list.d/llvm.list
        sudo tee /etc/dpkg/dpkg.cfg.d/01_nodoc <<EOF
        path-exclude /usr/share/doc/*
        path-exclude /usr/share/man/*
        path-exclude /usr/share/info/*
        EOF
    - name: Cache APT
      uses: actions/cache@v4
      with:
        path: /var/cache/apt/archives/
        key: apt-${{ runner.os }}-${{ env.APT_CACHE_VERSION }}
    - name: APT update + install
      shell: bash
      run: |
        sudo apt -qq update || true
        sudo apt-get -y --allow-unauthenticated --no-install-recommends install libllvm20 clang-20 lld-20 libdrm-dev libclc-20-dev libclang-20-dev llvm-20-dev libllvmspirvlib-20-dev
        sudo chown -R $USER:$USER /var/cache/apt/archives/
    - name: Install vulkan SDK
      shell: bash
      run: |
        curl -L https://sdk.lunarg.com/sdk/download/1.4.321.1/linux/vulkansdk-linux-x86_64-1.4.321.1.tar.xz | sudo tar -Jxf - -C /usr --strip-components=2
        sudo tee /usr/lib/pkgconfig/SPIRV-Tools.pc <<EOF
        prefix=/usr
        libdir=\${prefix}/lib
        includedir=\${prefix}/include

        Name: SPIRV-Tools
        Description: Tools for SPIR-V
        Version: 2025.3

        Libs: -L\${libdir} -lSPIRV-Tools-opt -lSPIRV-Tools -lSPIRV-Tools-link
        Cflags: -I\${includedir}
        EOF
    - name: Build mesa
      shell: bash
      run: |
        git clone --depth 1 --branch ${{ inputs.mesa-tag }} https://gitlab.freedesktop.org/mesa/mesa.git ${{ github.workspace }}/mesa
        cd ${{ github.workspace }}/mesa
        sed -i '/gnu_symbol_visibility/d' src/compiler/meson.build src/compiler/nir/meson.build src/gallium/auxiliary/meson.build src/nouveau/compiler/meson.build src/util/meson.build
        export CLANG_PATH=$(which clang-20)
        meson setup build/ -Dgallium-drivers=llvmpipe -Dplatforms=[] -Dglx=disabled -Dvulkan-drivers=swrast,nouveau -Dopengl=false -Degl=disabled -Dgbm=disabled -Dvideo-codecs=[]
        ninja -C build
        c++ -s -o libtinymesa.so -shared -fPIC -Wl,--no-undefined -Wl,--whole-archive build/src/compiler/nir/libnir.a -Wl,--no-whole-archive \
          -Wl,--start-group $(find build/src -name "*.a" | grep -v "nir") -Wl,--end-group
        c++ -s -o libtinymesa_lvp.so -shared -fPIC -Wl,--no-undefined -Wl,-T,${{ github.workspace }}/lvp.ld build/src/gallium/auxiliary/libgallium.a \
          -Wl,--start-group $(find build/src -name "*.a" | grep -Ev "nir|gallium") -Wl,--end-group \
          -lLLVM-20 -ltinymesa -L.
        c++ -s -o libtinymesa_nak.so -shared -fPIC -Wl,--no-undefined -Wl,-T,${{ github.workspace }}/nak.ld build/src/nouveau/compiler/libnak.a build/src/nouveau/compiler/libnak_rs.a \
          -Wl,--start-group $(find build/src -name "*.a" | grep -Ev "nir|nak") -Wl,--end-group \
          -ltinymesa -L.
